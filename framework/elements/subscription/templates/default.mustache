{{#error_message}}
    <div class="cm-error cm-{{element_type}}-error">
        {{error_message}}
    </div>
{{/error_message}}
{{#all_plans}}
    <div class="cm-plan cm-plan-{{plan_id}}" style="width: 48%; margin-right: 2%; float: left;">
        <h2>{{plan_name}}</h2>
        <p>{{plan_description}}</p>

          {{#flexible_price}}
                <label class="cm-add-amount">Adjust your payment amount:</label>
                <span class="cm-store-flexible-price">
                    <span class="cm-store-currency">{{currency}}</span>
                <input type="number" min="{{minimum_price}}" name="plan_amount" id="plan_flexible_price" value="{{plan_price}}" autocomplete="off" >
              </span>
              </span>
          {{/flexible_price}}
        <a href="#" class="button cm-subscribe" data-price="{{plan_price}}" data-min="{{minimum_price}}" data-plan-id="{{plan_id}}" id="subscribe">$<span class="amount" id="plan_price">{{plan_price}}</span>/{{plan_interval}} - Subscribe</a>
    </div>
{{/all_plans}}

{{#logged_in}}
    <a href="#" class="cm-my-account cm-secondary-link">My Account</a>
{{/logged_in}}

{{^logged_in}}
    <a href="#" class="cm-login cm-secondary-link">Login to Family</a>
{{/logged_in}}

<div style="clear:both;"></div>

<script type="text/javascript">
(function() {
    'use strict';
    var cm = window.cashmusic;

    var error_messages = {
        "409": "Whoops, looks like you've already got a subscription with this email and payment method.",
        "412": "There was an error creating your subscription. Contact info@cashmusic.org for help.",
        "404": "The subscription plan you're trying to subscribe to does not appear to exist.",
        "402": "Sorry, the price you entered is less than the minimum subscription price.",
        "417": "Your subscription was created, but we tried to email you a verification and failed. Is this a valid email?",
        "406": "Creation of your subscription failed. Contact info@cashmusic.org for help.",
        "403": "We tried to create a user for you and failed. Contact info@cashmusic.org for help."
    };


    var verification = false;
    var stripe_public_key = false;

    // get stripe public key
    {{#stripe_public_key}}
        var stripe_public_key = "{{stripe_public_key}}";
    {{/stripe_public_key}}

    // is this an email verification run?
    {{#key}}
        var verification = true;
    {{/key}}

    // set shipping true, or to false if there is no shipping
    var shipping = {{shipping}};

    cm.events.add(cm,'ready', function(e) {
        cm.session.start();

        if (verification !== false) {
            cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"verified"});
        }

        var plan_price = document.getElementById('plan_price');
        var subscribe_button = document.querySelector('.cm-subscribe');
        var flexible_price = document.getElementById('plan_flexible_price');

        var login = document.querySelector('.cm-login');

        if (login) {
            cm.events.add(login, 'click', function (e) {
                e.preventDefault();
                cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"login"});
            });
        }

        var account = document.querySelector('.cm-my-account');

        if (account) {
            cm.events.add(account, 'click', function (e) {
                e.preventDefault();
                cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"logged_in_index"});
            });
        }

        if (flexible_price) {
            flexible_price.addEventListener('keyup', function() {
                var price = (flexible_price.value != "") ? flexible_price.value : "10.00";

                plan_price.innerHTML = price;

                subscribe_button.setAttribute("data-price", price);

            }, false);
        }

        if (subscribe_button) {
            // user triggered the subscribe button
            cm.events.add(subscribe_button, 'click', function (e) {

                var price = subscribe_button.getAttribute("data-price");
                var minimum = subscribe_button.getAttribute('data-min');

                if (parseInt(price) < parseInt(minimum)) {

                    flexible_price.value = minimum;
                    plan_price.innerHTML = minimum;
                    subscribe_button.setAttribute("data-price", minimum);
                    //flexible_price.className += "shake";
                    return false;
                } else {
                    /*flexible_price.className =
                            flexible_price.className.replace(new RegExp('(?:^|\\s)'+ 'shake' + '(?:\\s|$)'), ' ');*/
                }

                var plan_id = subscribe_button.getAttribute("data-plan-id");

                cm.loadScript(cm.path + '/checkout/checkout.js', function () {
                    cm.checkout.prep();
                    cm.checkout.begin({
                        "stripe": stripe_public_key,
                        "paypal": false,
                        "currency": "usd", // USD = auto default
                        "recurring": true,
                        "shipping": shipping,
                        "total": "{{currency}}" + parseFloat(price),
                        "transaction_message": "/{{interval}}"
                    });

                });

                cm.events.add(cm, 'checkoutdata', function (payment) {
                    console.log("hey hey hey")
/*                    e.preventDefault();
                    e.stopPropagation();*/

                    var f = document.createElement('form');
                    f.method = 'post';
                    f.action = '';
                    f.id = "subscription_form";

                    var els = ['cash_request_type','cash_action','element_id','price','stripe','origin','email_address','subscription_plan','customer_name','geo', 'shipping_info', 'finalize_url'];
                    for (var i = 0, len = els.length; i < len; i++) {
                        var inp = document.createElement('input');
                        inp.type = 'hidden';
                        inp.name = els[i];
                        inp.value = '';
                        f.appendChild(inp);
                    }

                    f.cash_request_type.value = 'commerce';
                    f.cash_action.value = 'initiatesubscription';
                    {{#session_id}}f.session_id = '{{session_id}}';{{/session_id}}
                    f.element_id.value = {{element_id}};
                    f.price.value = parseFloat(subscribe_button.getAttribute('data-price'));
                    f.subscription_plan.value = subscribe_button.getAttribute('data-plan-id');
                    f.origin.value = payment.detail.origin;
                    f.email_address.value = payment.detail.email;
                    f.customer_name.value = payment.detail.name;
                    f.geo.value = cm.geo;

                    if (cm.embedded) {
                        if (cm.get['params']['location']) {
                            f.finalize_url.value = encodeURI(cm.get['params']['location']);
                        } else {
                            f.finalize_url.value = encodeURI(window.location.href);
                        }
                    } else {
                        f.finalize_url.value = encodeURI(top.location.href);
                    }

                    if (payment.detail.stripe) {
                        f.stripe.value = payment.detail.stripe;
                    }

                    // add shipping to form
                    if (payment.detail.shipping) {
                        f.shipping_info.value = JSON.stringify(payment.detail.shipping);

                    }

                    initiatePayment(f);
                    var f = undefined;

                });

            });
        }

        function initiatePayment(f) {
            console.log("initiatePayment fired");
            //document.body.appendChild(f);
            cm.ajax.send(
                    '{{public_url}}/request/payload',
                    cm.ajax.encodeForm(f),
                    function(details) {
                        console.log("inside the ajax call response");
                        if (details.substring(0,4) == 'http') {
                            top.location.href = details;
                        } else if (details == '200') {
                            cm.overlay.reveal({"element":"{{element_id}}","endpoint":"{{public_url}}","state":"success"});

                            return true;
                        } else {
                            cm.overlay.reveal(error_messages[details]);
                        }
                    },
                    function(details) {
                        cm.overlay.reveal(error_messages[details]);
                    }
            );
        }
        //
    });

}());
</script>

